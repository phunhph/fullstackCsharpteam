@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Face Recognition";
}

<h1>@ViewData["Title"]</h1>

<p>Please allow access to your camera to start face recognition.</p>

<div>
    <video id="video" autoplay="true" width="640" height="480"></video>
    <canvas id="canvas" width="640" height="480" style="display: none;"></canvas>
</div>

<script type="text/javascript">
    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const context = canvas.getContext('2d');
    const data = document.getElementById('data');

    // Get user's permission to access the camera
    navigator.mediaDevices.getUserMedia({ video: true })
        .then(stream => {
            video.srcObject = stream;
            video.play();
        })
        .catch(error => {
            console.error(`Failed to get user media: ${error}`);
        });

    // Capture a frame from the camera and send it to the server for face recognition
    function capture() {
        context.drawImage(video, 0, 0, canvas.width, canvas.height);
        const image = canvas.toDataURL('image/jpeg', 0.5);

        fetch('/Beface/FaceRecognition', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ image: image })
        })
            .then(response => response.json())
            .then(data => {
                // Display the recognized face on the canvas
                const img = new Image();
                img.src = `data:image/jpeg;base64,${data.image}`;
                context.drawImage(img, 0, 0, canvas.width, canvas.height);
            })
            .catch(error => {
                console.error(`Failed to recognize face: ${error}`);
            });
    }

    // Capture a frame from the camera every 1 second
    setInterval(capture, 1000);
</script>
